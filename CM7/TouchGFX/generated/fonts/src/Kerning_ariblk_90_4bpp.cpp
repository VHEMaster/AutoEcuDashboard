#include <touchgfx/Font.hpp>

FONT_KERNING_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::KerningNode kerning_ariblk_90_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE = {
    { 0x0066,  5 },  // (First char = [0x0066, f], Second char = [0x0020,  ], Kerning dist = 5)
    { 0x0066,  7 },  // (First char = [0x0066, f], Second char = [0x0021, !], Kerning dist = 7)
    { 0x0042,  2 },  // (First char = [0x0042, B], Second char = [0x002C, ,], Kerning dist = 2)
    { 0x0043,  2 },  // (First char = [0x0043, C], Second char = [0x002C, ,], Kerning dist = 2)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x002C, ,], Kerning dist = -1)
    { 0x0046, -13 },  // (First char = [0x0046, F], Second char = [0x002C, ,], Kerning dist = -13)
    { 0x0047,  1 },  // (First char = [0x0047, G], Second char = [0x002C, ,], Kerning dist = 1)
    { 0x004A, -2 },  // (First char = [0x004A, J], Second char = [0x002C, ,], Kerning dist = -2)
    { 0x004F, -2 },  // (First char = [0x004F, O], Second char = [0x002C, ,], Kerning dist = -2)
    { 0x0050, -16 },  // (First char = [0x0050, P], Second char = [0x002C, ,], Kerning dist = -16)
    { 0x0051,  3 },  // (First char = [0x0051, Q], Second char = [0x002C, ,], Kerning dist = 3)
    { 0x0054, -13 },  // (First char = [0x0054, T], Second char = [0x002C, ,], Kerning dist = -13)
    { 0x0055, -2 },  // (First char = [0x0055, U], Second char = [0x002C, ,], Kerning dist = -2)
    { 0x0056, -11 },  // (First char = [0x0056, V], Second char = [0x002C, ,], Kerning dist = -11)
    { 0x0057, -4 },  // (First char = [0x0057, W], Second char = [0x002C, ,], Kerning dist = -4)
    { 0x0059, -15 },  // (First char = [0x0059, Y], Second char = [0x002C, ,], Kerning dist = -15)
    { 0x0066, -5 },  // (First char = [0x0066, f], Second char = [0x002C, ,], Kerning dist = -5)
    { 0x006F, -1 },  // (First char = [0x006F, o], Second char = [0x002C, ,], Kerning dist = -1)
    { 0x0070, -1 },  // (First char = [0x0070, p], Second char = [0x002C, ,], Kerning dist = -1)
    { 0x0072, -6 },  // (First char = [0x0072, r], Second char = [0x002C, ,], Kerning dist = -6)
    { 0x0076, -8 },  // (First char = [0x0076, v], Second char = [0x002C, ,], Kerning dist = -8)
    { 0x0077, -7 },  // (First char = [0x0077, w], Second char = [0x002C, ,], Kerning dist = -7)
    { 0x0079, -8 },  // (First char = [0x0079, y], Second char = [0x002C, ,], Kerning dist = -8)
    { 0x0054, -6 },  // (First char = [0x0054, T], Second char = [0x002D, -], Kerning dist = -6)
    { 0x0056, -4 },  // (First char = [0x0056, V], Second char = [0x002D, -], Kerning dist = -4)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x002D, -], Kerning dist = -1)
    { 0x0059, -8 },  // (First char = [0x0059, Y], Second char = [0x002D, -], Kerning dist = -8)
    { 0x0042,  1 },  // (First char = [0x0042, B], Second char = [0x002E, .], Kerning dist = 1)
    { 0x0043,  2 },  // (First char = [0x0043, C], Second char = [0x002E, .], Kerning dist = 2)
    { 0x0044, -2 },  // (First char = [0x0044, D], Second char = [0x002E, .], Kerning dist = -2)
    { 0x0046, -14 },  // (First char = [0x0046, F], Second char = [0x002E, .], Kerning dist = -14)
    { 0x0047,  1 },  // (First char = [0x0047, G], Second char = [0x002E, .], Kerning dist = 1)
    { 0x004A, -2 },  // (First char = [0x004A, J], Second char = [0x002E, .], Kerning dist = -2)
    { 0x004F, -2 },  // (First char = [0x004F, O], Second char = [0x002E, .], Kerning dist = -2)
    { 0x0050, -17 },  // (First char = [0x0050, P], Second char = [0x002E, .], Kerning dist = -17)
    { 0x0051,  2 },  // (First char = [0x0051, Q], Second char = [0x002E, .], Kerning dist = 2)
    { 0x0054, -14 },  // (First char = [0x0054, T], Second char = [0x002E, .], Kerning dist = -14)
    { 0x0055, -3 },  // (First char = [0x0055, U], Second char = [0x002E, .], Kerning dist = -3)
    { 0x0056, -12 },  // (First char = [0x0056, V], Second char = [0x002E, .], Kerning dist = -12)
    { 0x0057, -5 },  // (First char = [0x0057, W], Second char = [0x002E, .], Kerning dist = -5)
    { 0x0059, -15 },  // (First char = [0x0059, Y], Second char = [0x002E, .], Kerning dist = -15)
    { 0x0066, -5 },  // (First char = [0x0066, f], Second char = [0x002E, .], Kerning dist = -5)
    { 0x006F, -2 },  // (First char = [0x006F, o], Second char = [0x002E, .], Kerning dist = -2)
    { 0x0070, -2 },  // (First char = [0x0070, p], Second char = [0x002E, .], Kerning dist = -2)
    { 0x0072, -7 },  // (First char = [0x0072, r], Second char = [0x002E, .], Kerning dist = -7)
    { 0x0076, -8 },  // (First char = [0x0076, v], Second char = [0x002E, .], Kerning dist = -8)
    { 0x0077, -8 },  // (First char = [0x0077, w], Second char = [0x002E, .], Kerning dist = -8)
    { 0x0079, -8 },  // (First char = [0x0079, y], Second char = [0x002E, .], Kerning dist = -8)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x003A, :], Kerning dist = -3)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x003A, :], Kerning dist = -2)
    { 0x0059, -5 },  // (First char = [0x0059, Y], Second char = [0x003A, :], Kerning dist = -5)
    { 0x0072,  4 },  // (First char = [0x0072, r], Second char = [0x003A, :], Kerning dist = 4)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x003B, ;], Kerning dist = -3)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x003B, ;], Kerning dist = -2)
    { 0x0059, -5 },  // (First char = [0x0059, Y], Second char = [0x003B, ;], Kerning dist = -5)
    { 0x0072,  4 },  // (First char = [0x0072, r], Second char = [0x003B, ;], Kerning dist = 4)
    { 0x0066,  7 },  // (First char = [0x0066, f], Second char = [0x003F, ?], Kerning dist = 7)
    { 0x0042, -2 },  // (First char = [0x0042, B], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0044, -4 },  // (First char = [0x0044, D], Second char = [0x0041, A], Kerning dist = -4)
    { 0x0046, -8 },  // (First char = [0x0046, F], Second char = [0x0041, A], Kerning dist = -8)
    { 0x004A, -2 },  // (First char = [0x004A, J], Second char = [0x0041, A], Kerning dist = -2)
    { 0x004E, -1 },  // (First char = [0x004E, N], Second char = [0x0041, A], Kerning dist = -1)
    { 0x004F, -3 },  // (First char = [0x004F, O], Second char = [0x0041, A], Kerning dist = -3)
    { 0x0050, -8 },  // (First char = [0x0050, P], Second char = [0x0041, A], Kerning dist = -8)
    { 0x0051,  2 },  // (First char = [0x0051, Q], Second char = [0x0041, A], Kerning dist = 2)
    { 0x0054, -6 },  // (First char = [0x0054, T], Second char = [0x0041, A], Kerning dist = -6)
    { 0x0055, -3 },  // (First char = [0x0055, U], Second char = [0x0041, A], Kerning dist = -3)
    { 0x0056, -5 },  // (First char = [0x0056, V], Second char = [0x0041, A], Kerning dist = -5)
    { 0x0059, -8 },  // (First char = [0x0059, Y], Second char = [0x0041, A], Kerning dist = -8)
    { 0x00D6, -3 },  // (First char = [0x00D6, ], Second char = [0x0041, A], Kerning dist = -3)
    { 0x00DC, -3 },  // (First char = [0x00DC, ], Second char = [0x0041, A], Kerning dist = -3)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0043, C], Kerning dist = -2)
    { 0x004B, -3 },  // (First char = [0x004B, K], Second char = [0x0043, C], Kerning dist = -3)
    { 0x004C, -2 },  // (First char = [0x004C, L], Second char = [0x0043, C], Kerning dist = -2)
    { 0x0052, -2 },  // (First char = [0x0052, R], Second char = [0x0043, C], Kerning dist = -2)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x0043, C], Kerning dist = -3)
    { 0x0056, -3 },  // (First char = [0x0056, V], Second char = [0x0043, C], Kerning dist = -3)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x0043, C], Kerning dist = -2)
    { 0x0058, -3 },  // (First char = [0x0058, X], Second char = [0x0043, C], Kerning dist = -3)
    { 0x0059, -5 },  // (First char = [0x0059, Y], Second char = [0x0043, C], Kerning dist = -5)
    { 0x00C4, -2 },  // (First char = [0x00C4, ], Second char = [0x0043, C], Kerning dist = -2)
    { 0x00C5, -2 },  // (First char = [0x00C5, ], Second char = [0x0043, C], Kerning dist = -2)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0047, G], Kerning dist = -2)
    { 0x004B, -3 },  // (First char = [0x004B, K], Second char = [0x0047, G], Kerning dist = -3)
    { 0x004C, -2 },  // (First char = [0x004C, L], Second char = [0x0047, G], Kerning dist = -2)
    { 0x0052, -2 },  // (First char = [0x0052, R], Second char = [0x0047, G], Kerning dist = -2)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x0047, G], Kerning dist = -3)
    { 0x0056, -3 },  // (First char = [0x0056, V], Second char = [0x0047, G], Kerning dist = -3)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x0047, G], Kerning dist = -2)
    { 0x0058, -3 },  // (First char = [0x0058, X], Second char = [0x0047, G], Kerning dist = -3)
    { 0x0059, -5 },  // (First char = [0x0059, Y], Second char = [0x0047, G], Kerning dist = -5)
    { 0x00C4, -2 },  // (First char = [0x00C4, ], Second char = [0x0047, G], Kerning dist = -2)
    { 0x00C5, -2 },  // (First char = [0x00C5, ], Second char = [0x0047, G], Kerning dist = -2)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x004F, O], Kerning dist = -2)
    { 0x004B, -3 },  // (First char = [0x004B, K], Second char = [0x004F, O], Kerning dist = -3)
    { 0x004C, -2 },  // (First char = [0x004C, L], Second char = [0x004F, O], Kerning dist = -2)
    { 0x0052, -2 },  // (First char = [0x0052, R], Second char = [0x004F, O], Kerning dist = -2)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x004F, O], Kerning dist = -3)
    { 0x0056, -3 },  // (First char = [0x0056, V], Second char = [0x004F, O], Kerning dist = -3)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x004F, O], Kerning dist = -2)
    { 0x0058, -3 },  // (First char = [0x0058, X], Second char = [0x004F, O], Kerning dist = -3)
    { 0x0059, -5 },  // (First char = [0x0059, Y], Second char = [0x004F, O], Kerning dist = -5)
    { 0x00C4, -2 },  // (First char = [0x00C4, ], Second char = [0x004F, O], Kerning dist = -2)
    { 0x00C5, -2 },  // (First char = [0x00C5, ], Second char = [0x004F, O], Kerning dist = -2)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0051, Q], Kerning dist = -2)
    { 0x0052, -2 },  // (First char = [0x0052, R], Second char = [0x0051, Q], Kerning dist = -2)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x0051, Q], Kerning dist = -3)
    { 0x0056, -3 },  // (First char = [0x0056, V], Second char = [0x0051, Q], Kerning dist = -3)
    { 0x00C4, -2 },  // (First char = [0x00C4, ], Second char = [0x0051, Q], Kerning dist = -2)
    { 0x00C5, -2 },  // (First char = [0x00C5, ], Second char = [0x0051, Q], Kerning dist = -2)
    { 0x0059, -4 },  // (First char = [0x0059, Y], Second char = [0x0053, S], Kerning dist = -4)
    { 0x0041, -6 },  // (First char = [0x0041, A], Second char = [0x0054, T], Kerning dist = -6)
    { 0x004C, -5 },  // (First char = [0x004C, L], Second char = [0x0054, T], Kerning dist = -5)
    { 0x004F, -2 },  // (First char = [0x004F, O], Second char = [0x0054, T], Kerning dist = -2)
    { 0x0051, -2 },  // (First char = [0x0051, Q], Second char = [0x0054, T], Kerning dist = -2)
    { 0x0052, -1 },  // (First char = [0x0052, R], Second char = [0x0054, T], Kerning dist = -1)
    { 0x00C4, -6 },  // (First char = [0x00C4, ], Second char = [0x0054, T], Kerning dist = -6)
    { 0x00C5, -6 },  // (First char = [0x00C5, ], Second char = [0x0054, T], Kerning dist = -6)
    { 0x00D6, -2 },  // (First char = [0x00D6, ], Second char = [0x0054, T], Kerning dist = -2)
    { 0x0041, -3 },  // (First char = [0x0041, A], Second char = [0x0055, U], Kerning dist = -3)
    { 0x0042, -2 },  // (First char = [0x0042, B], Second char = [0x0055, U], Kerning dist = -2)
    { 0x004C, -2 },  // (First char = [0x004C, L], Second char = [0x0055, U], Kerning dist = -2)
    { 0x0052, -2 },  // (First char = [0x0052, R], Second char = [0x0055, U], Kerning dist = -2)
    { 0x00C4, -3 },  // (First char = [0x00C4, ], Second char = [0x0055, U], Kerning dist = -3)
    { 0x00C5, -3 },  // (First char = [0x00C5, ], Second char = [0x0055, U], Kerning dist = -3)
    { 0x0041, -5 },  // (First char = [0x0041, A], Second char = [0x0056, V], Kerning dist = -5)
    { 0x0044, -3 },  // (First char = [0x0044, D], Second char = [0x0056, V], Kerning dist = -3)
    { 0x004C, -5 },  // (First char = [0x004C, L], Second char = [0x0056, V], Kerning dist = -5)
    { 0x004F, -4 },  // (First char = [0x004F, O], Second char = [0x0056, V], Kerning dist = -4)
    { 0x0051, -4 },  // (First char = [0x0051, Q], Second char = [0x0056, V], Kerning dist = -4)
    { 0x0052, -2 },  // (First char = [0x0052, R], Second char = [0x0056, V], Kerning dist = -2)
    { 0x00C4, -5 },  // (First char = [0x00C4, ], Second char = [0x0056, V], Kerning dist = -5)
    { 0x00C5, -5 },  // (First char = [0x00C5, ], Second char = [0x0056, V], Kerning dist = -5)
    { 0x00D6, -4 },  // (First char = [0x00D6, ], Second char = [0x0056, V], Kerning dist = -4)
    { 0x0041,  1 },  // (First char = [0x0041, A], Second char = [0x0057, W], Kerning dist = 1)
    { 0x0044,  2 },  // (First char = [0x0044, D], Second char = [0x0057, W], Kerning dist = 2)
    { 0x004C, -2 },  // (First char = [0x004C, L], Second char = [0x0057, W], Kerning dist = -2)
    { 0x004F, -2 },  // (First char = [0x004F, O], Second char = [0x0057, W], Kerning dist = -2)
    { 0x00C4,  1 },  // (First char = [0x00C4, ], Second char = [0x0057, W], Kerning dist = 1)
    { 0x00C5,  1 },  // (First char = [0x00C5, ], Second char = [0x0057, W], Kerning dist = 1)
    { 0x00D6, -2 },  // (First char = [0x00D6, ], Second char = [0x0057, W], Kerning dist = -2)
    { 0x004F, -5 },  // (First char = [0x004F, O], Second char = [0x0058, X], Kerning dist = -5)
    { 0x00D6, -5 },  // (First char = [0x00D6, ], Second char = [0x0058, X], Kerning dist = -5)
    { 0x0041, -8 },  // (First char = [0x0041, A], Second char = [0x0059, Y], Kerning dist = -8)
    { 0x0044, -3 },  // (First char = [0x0044, D], Second char = [0x0059, Y], Kerning dist = -3)
    { 0x004C, -7 },  // (First char = [0x004C, L], Second char = [0x0059, Y], Kerning dist = -7)
    { 0x004F, -6 },  // (First char = [0x004F, O], Second char = [0x0059, Y], Kerning dist = -6)
    { 0x0051, -5 },  // (First char = [0x0051, Q], Second char = [0x0059, Y], Kerning dist = -5)
    { 0x0052, -4 },  // (First char = [0x0052, R], Second char = [0x0059, Y], Kerning dist = -4)
    { 0x00C4, -8 },  // (First char = [0x00C4, ], Second char = [0x0059, Y], Kerning dist = -8)
    { 0x00C5, -8 },  // (First char = [0x00C5, ], Second char = [0x0059, Y], Kerning dist = -8)
    { 0x00D6, -6 },  // (First char = [0x00D6, ], Second char = [0x0059, Y], Kerning dist = -6)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x0061, a], Kerning dist = -2)
    { 0x004A, -2 },  // (First char = [0x004A, J], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0054, -5 },  // (First char = [0x0054, T], Second char = [0x0061, a], Kerning dist = -5)
    { 0x0056, -4 },  // (First char = [0x0056, V], Second char = [0x0061, a], Kerning dist = -4)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0059, -8 },  // (First char = [0x0059, Y], Second char = [0x0061, a], Kerning dist = -8)
    { 0x0066, -1 },  // (First char = [0x0066, f], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0072,  2 },  // (First char = [0x0072, r], Second char = [0x0061, a], Kerning dist = 2)
    { 0x0077, -1 },  // (First char = [0x0077, w], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0079, -2 },  // (First char = [0x0079, y], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0061,  1 },  // (First char = [0x0061, a], Second char = [0x0062, b], Kerning dist = 1)
    { 0x0062,  1 },  // (First char = [0x0062, b], Second char = [0x0062, b], Kerning dist = 1)
    { 0x0065, -1 },  // (First char = [0x0065, e], Second char = [0x0062, b], Kerning dist = -1)
    { 0x0054, -5 },  // (First char = [0x0054, T], Second char = [0x0063, c], Kerning dist = -5)
    { 0x0072,  2 },  // (First char = [0x0072, r], Second char = [0x0063, c], Kerning dist = 2)
    { 0x0076, -2 },  // (First char = [0x0076, v], Second char = [0x0063, c], Kerning dist = -2)
    { 0x0077, -1 },  // (First char = [0x0077, w], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0078, -2 },  // (First char = [0x0078, x], Second char = [0x0063, c], Kerning dist = -2)
    { 0x0079, -2 },  // (First char = [0x0079, y], Second char = [0x0063, c], Kerning dist = -2)
    { 0x007A, -1 },  // (First char = [0x007A, z], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x0064, d], Kerning dist = -2)
    { 0x0059, -8 },  // (First char = [0x0059, Y], Second char = [0x0064, d], Kerning dist = -8)
    { 0x0064,  1 },  // (First char = [0x0064, d], Second char = [0x0064, d], Kerning dist = 1)
    { 0x0072,  2 },  // (First char = [0x0072, r], Second char = [0x0064, d], Kerning dist = 2)
    { 0x0076, -2 },  // (First char = [0x0076, v], Second char = [0x0064, d], Kerning dist = -2)
    { 0x0077, -1 },  // (First char = [0x0077, w], Second char = [0x0064, d], Kerning dist = -1)
    { 0x0078, -2 },  // (First char = [0x0078, x], Second char = [0x0064, d], Kerning dist = -2)
    { 0x0079, -2 },  // (First char = [0x0079, y], Second char = [0x0064, d], Kerning dist = -2)
    { 0x007A, -1 },  // (First char = [0x007A, z], Second char = [0x0064, d], Kerning dist = -1)
    { 0x0046, -3 },  // (First char = [0x0046, F], Second char = [0x0065, e], Kerning dist = -3)
    { 0x004A, -2 },  // (First char = [0x004A, J], Second char = [0x0065, e], Kerning dist = -2)
    { 0x004B, -3 },  // (First char = [0x004B, K], Second char = [0x0065, e], Kerning dist = -3)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x0065, e], Kerning dist = -2)
    { 0x0052, -2 },  // (First char = [0x0052, R], Second char = [0x0065, e], Kerning dist = -2)
    { 0x0054, -5 },  // (First char = [0x0054, T], Second char = [0x0065, e], Kerning dist = -5)
    { 0x0056, -5 },  // (First char = [0x0056, V], Second char = [0x0065, e], Kerning dist = -5)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x0065, e], Kerning dist = -2)
    { 0x0059, -8 },  // (First char = [0x0059, Y], Second char = [0x0065, e], Kerning dist = -8)
    { 0x0066, -2 },  // (First char = [0x0066, f], Second char = [0x0065, e], Kerning dist = -2)
    { 0x006B, -3 },  // (First char = [0x006B, k], Second char = [0x0065, e], Kerning dist = -3)
    { 0x0072,  1 },  // (First char = [0x0072, r], Second char = [0x0065, e], Kerning dist = 1)
    { 0x0076, -2 },  // (First char = [0x0076, v], Second char = [0x0065, e], Kerning dist = -2)
    { 0x0077, -1 },  // (First char = [0x0077, w], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0078, -2 },  // (First char = [0x0078, x], Second char = [0x0065, e], Kerning dist = -2)
    { 0x0079, -2 },  // (First char = [0x0079, y], Second char = [0x0065, e], Kerning dist = -2)
    { 0x007A, -1 },  // (First char = [0x007A, z], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0066,  2 },  // (First char = [0x0066, f], Second char = [0x0066, f], Kerning dist = 2)
    { 0x0061,  1 },  // (First char = [0x0061, a], Second char = [0x0067, g], Kerning dist = 1)
    { 0x0065,  2 },  // (First char = [0x0065, e], Second char = [0x0067, g], Kerning dist = 2)
    { 0x0067,  1 },  // (First char = [0x0067, g], Second char = [0x0067, g], Kerning dist = 1)
    { 0x0072,  2 },  // (First char = [0x0072, r], Second char = [0x0067, g], Kerning dist = 2)
    { 0x0054,  2 },  // (First char = [0x0054, T], Second char = [0x0068, h], Kerning dist = 2)
    { 0x0057,  3 },  // (First char = [0x0057, W], Second char = [0x0068, h], Kerning dist = 3)
    { 0x0063, -2 },  // (First char = [0x0063, c], Second char = [0x0068, h], Kerning dist = -2)
    { 0x0077,  2 },  // (First char = [0x0077, w], Second char = [0x0068, h], Kerning dist = 2)
    { 0x0056,  1 },  // (First char = [0x0056, V], Second char = [0x0069, i], Kerning dist = 1)
    { 0x0057,  3 },  // (First char = [0x0057, W], Second char = [0x0069, i], Kerning dist = 3)
    { 0x0072,  4 },  // (First char = [0x0072, r], Second char = [0x006A, j], Kerning dist = 4)
    { 0x0063, -2 },  // (First char = [0x0063, c], Second char = [0x006B, k], Kerning dist = -2)
    { 0x0066,  1 },  // (First char = [0x0066, f], Second char = [0x006B, k], Kerning dist = 1)
    { 0x0072,  3 },  // (First char = [0x0072, r], Second char = [0x006B, k], Kerning dist = 3)
    { 0x0046,  1 },  // (First char = [0x0046, F], Second char = [0x006C, l], Kerning dist = 1)
    { 0x0054,  2 },  // (First char = [0x0054, T], Second char = [0x006C, l], Kerning dist = 2)
    { 0x0063, -2 },  // (First char = [0x0063, c], Second char = [0x006C, l], Kerning dist = -2)
    { 0x0067,  1 },  // (First char = [0x0067, g], Second char = [0x006C, l], Kerning dist = 1)
    { 0x0072,  3 },  // (First char = [0x0072, r], Second char = [0x006C, l], Kerning dist = 3)
    { 0x0054, -4 },  // (First char = [0x0054, T], Second char = [0x006D, m], Kerning dist = -4)
    { 0x0072,  4 },  // (First char = [0x0072, r], Second char = [0x006D, m], Kerning dist = 4)
    { 0x0072,  4 },  // (First char = [0x0072, r], Second char = [0x006E, n], Kerning dist = 4)
    { 0x0046, -3 },  // (First char = [0x0046, F], Second char = [0x006F, o], Kerning dist = -3)
    { 0x004A, -2 },  // (First char = [0x004A, J], Second char = [0x006F, o], Kerning dist = -2)
    { 0x004B, -3 },  // (First char = [0x004B, K], Second char = [0x006F, o], Kerning dist = -3)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x006F, o], Kerning dist = -2)
    { 0x0052, -2 },  // (First char = [0x0052, R], Second char = [0x006F, o], Kerning dist = -2)
    { 0x0054, -6 },  // (First char = [0x0054, T], Second char = [0x006F, o], Kerning dist = -6)
    { 0x0056, -5 },  // (First char = [0x0056, V], Second char = [0x006F, o], Kerning dist = -5)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x006F, o], Kerning dist = -2)
    { 0x0059, -8 },  // (First char = [0x0059, Y], Second char = [0x006F, o], Kerning dist = -8)
    { 0x0066, -2 },  // (First char = [0x0066, f], Second char = [0x006F, o], Kerning dist = -2)
    { 0x006B, -3 },  // (First char = [0x006B, k], Second char = [0x006F, o], Kerning dist = -3)
    { 0x0072,  1 },  // (First char = [0x0072, r], Second char = [0x006F, o], Kerning dist = 1)
    { 0x0076, -2 },  // (First char = [0x0076, v], Second char = [0x006F, o], Kerning dist = -2)
    { 0x0077, -2 },  // (First char = [0x0077, w], Second char = [0x006F, o], Kerning dist = -2)
    { 0x0078, -2 },  // (First char = [0x0078, x], Second char = [0x006F, o], Kerning dist = -2)
    { 0x0079, -2 },  // (First char = [0x0079, y], Second char = [0x006F, o], Kerning dist = -2)
    { 0x007A, -1 },  // (First char = [0x007A, z], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0041,  2 },  // (First char = [0x0041, A], Second char = [0x0070, p], Kerning dist = 2)
    { 0x0059, -5 },  // (First char = [0x0059, Y], Second char = [0x0070, p], Kerning dist = -5)
    { 0x0061,  1 },  // (First char = [0x0061, a], Second char = [0x0070, p], Kerning dist = 1)
    { 0x0072,  4 },  // (First char = [0x0072, r], Second char = [0x0070, p], Kerning dist = 4)
    { 0x0059, -8 },  // (First char = [0x0059, Y], Second char = [0x0071, q], Kerning dist = -8)
    { 0x0072,  2 },  // (First char = [0x0072, r], Second char = [0x0071, q], Kerning dist = 2)
    { 0x0076, -2 },  // (First char = [0x0076, v], Second char = [0x0071, q], Kerning dist = -2)
    { 0x0077, -2 },  // (First char = [0x0077, w], Second char = [0x0071, q], Kerning dist = -2)
    { 0x0046, -3 },  // (First char = [0x0046, F], Second char = [0x0072, r], Kerning dist = -3)
    { 0x0054, -4 },  // (First char = [0x0054, T], Second char = [0x0072, r], Kerning dist = -4)
    { 0x0056, -3 },  // (First char = [0x0056, V], Second char = [0x0072, r], Kerning dist = -3)
    { 0x0067,  2 },  // (First char = [0x0067, g], Second char = [0x0072, r], Kerning dist = 2)
    { 0x0072,  4 },  // (First char = [0x0072, r], Second char = [0x0072, r], Kerning dist = 4)
    { 0x0054, -6 },  // (First char = [0x0054, T], Second char = [0x0073, s], Kerning dist = -6)
    { 0x0072,  2 },  // (First char = [0x0072, r], Second char = [0x0073, s], Kerning dist = 2)
    { 0x0061, -2 },  // (First char = [0x0061, a], Second char = [0x0074, t], Kerning dist = -2)
    { 0x0072,  4 },  // (First char = [0x0072, r], Second char = [0x0074, t], Kerning dist = 4)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x0075, u], Kerning dist = -1)
    { 0x004A, -2 },  // (First char = [0x004A, J], Second char = [0x0075, u], Kerning dist = -2)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x0075, u], Kerning dist = -2)
    { 0x0052, -2 },  // (First char = [0x0052, R], Second char = [0x0075, u], Kerning dist = -2)
    { 0x0054, -4 },  // (First char = [0x0054, T], Second char = [0x0075, u], Kerning dist = -4)
    { 0x0056, -3 },  // (First char = [0x0056, V], Second char = [0x0075, u], Kerning dist = -3)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x0075, u], Kerning dist = -2)
    { 0x0059, -5 },  // (First char = [0x0059, Y], Second char = [0x0075, u], Kerning dist = -5)
    { 0x0072,  3 },  // (First char = [0x0072, r], Second char = [0x0075, u], Kerning dist = 3)
    { 0x00C4, -1 },  // (First char = [0x00C4, ], Second char = [0x0075, u], Kerning dist = -1)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0076, v], Kerning dist = -2)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x0076, v], Kerning dist = -2)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x0076, v], Kerning dist = -2)
    { 0x0061, -2 },  // (First char = [0x0061, a], Second char = [0x0076, v], Kerning dist = -2)
    { 0x0062, -2 },  // (First char = [0x0062, b], Second char = [0x0076, v], Kerning dist = -2)
    { 0x0065, -2 },  // (First char = [0x0065, e], Second char = [0x0076, v], Kerning dist = -2)
    { 0x006E, -2 },  // (First char = [0x006E, n], Second char = [0x0076, v], Kerning dist = -2)
    { 0x006F, -3 },  // (First char = [0x006F, o], Second char = [0x0076, v], Kerning dist = -3)
    { 0x0072,  5 },  // (First char = [0x0072, r], Second char = [0x0076, v], Kerning dist = 5)
    { 0x00C4, -2 },  // (First char = [0x00C4, ], Second char = [0x0076, v], Kerning dist = -2)
    { 0x00C5, -2 },  // (First char = [0x00C5, ], Second char = [0x0076, v], Kerning dist = -2)
    { 0x00E4, -2 },  // (First char = [0x00E4, ], Second char = [0x0076, v], Kerning dist = -2)
    { 0x00E5, -2 },  // (First char = [0x00E5, ], Second char = [0x0076, v], Kerning dist = -2)
    { 0x00F6, -3 },  // (First char = [0x00F6, ], Second char = [0x0076, v], Kerning dist = -3)
    { 0x004C, -2 },  // (First char = [0x004C, L], Second char = [0x0077, w], Kerning dist = -2)
    { 0x0052,  2 },  // (First char = [0x0052, R], Second char = [0x0077, w], Kerning dist = 2)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0077, w], Kerning dist = -1)
    { 0x0064,  1 },  // (First char = [0x0064, d], Second char = [0x0077, w], Kerning dist = 1)
    { 0x006F, -2 },  // (First char = [0x006F, o], Second char = [0x0077, w], Kerning dist = -2)
    { 0x0070, -2 },  // (First char = [0x0070, p], Second char = [0x0077, w], Kerning dist = -2)
    { 0x0073, -2 },  // (First char = [0x0073, s], Second char = [0x0077, w], Kerning dist = -2)
    { 0x00F6, -2 },  // (First char = [0x00F6, ], Second char = [0x0077, w], Kerning dist = -2)
    { 0x0065, -2 },  // (First char = [0x0065, e], Second char = [0x0078, x], Kerning dist = -2)
    { 0x006F, -3 },  // (First char = [0x006F, o], Second char = [0x0078, x], Kerning dist = -3)
    { 0x00F6, -3 },  // (First char = [0x00F6, ], Second char = [0x0078, x], Kerning dist = -3)
    { 0x004A, -2 },  // (First char = [0x004A, J], Second char = [0x0079, y], Kerning dist = -2)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x0079, y], Kerning dist = -2)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0079, y], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0079, y], Kerning dist = -2)
    { 0x0063, -2 },  // (First char = [0x0063, c], Second char = [0x0079, y], Kerning dist = -2)
    { 0x0067,  2 },  // (First char = [0x0067, g], Second char = [0x0079, y], Kerning dist = 2)
    { 0x006B,  2 },  // (First char = [0x006B, k], Second char = [0x0079, y], Kerning dist = 2)
    { 0x006C,  2 },  // (First char = [0x006C, l], Second char = [0x0079, y], Kerning dist = 2)
    { 0x006F, -2 },  // (First char = [0x006F, o], Second char = [0x0079, y], Kerning dist = -2)
    { 0x0070, -2 },  // (First char = [0x0070, p], Second char = [0x0079, y], Kerning dist = -2)
    { 0x0072,  5 },  // (First char = [0x0072, r], Second char = [0x0079, y], Kerning dist = 5)
    { 0x00F6, -2 },  // (First char = [0x00F6, ], Second char = [0x0079, y], Kerning dist = -2)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x007A, z], Kerning dist = -3)
    { 0x006F,  2 },  // (First char = [0x006F, o], Second char = [0x007A, z], Kerning dist = 2)
    { 0x00F6,  2 },  // (First char = [0x00F6, ], Second char = [0x007A, z], Kerning dist = 2)
    { 0x0054, -6 },  // (First char = [0x0054, T], Second char = [0x00AD, ], Kerning dist = -6)
    { 0x0056, -4 },  // (First char = [0x0056, V], Second char = [0x00AD, ], Kerning dist = -4)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x00AD, ], Kerning dist = -1)
    { 0x0059, -8 },  // (First char = [0x0059, Y], Second char = [0x00AD, ], Kerning dist = -8)
    { 0x0042, -2 },  // (First char = [0x0042, B], Second char = [0x00C4, ], Kerning dist = -2)
    { 0x0044, -4 },  // (First char = [0x0044, D], Second char = [0x00C4, ], Kerning dist = -4)
    { 0x0046, -8 },  // (First char = [0x0046, F], Second char = [0x00C4, ], Kerning dist = -8)
    { 0x004A, -2 },  // (First char = [0x004A, J], Second char = [0x00C4, ], Kerning dist = -2)
    { 0x004E, -1 },  // (First char = [0x004E, N], Second char = [0x00C4, ], Kerning dist = -1)
    { 0x004F, -3 },  // (First char = [0x004F, O], Second char = [0x00C4, ], Kerning dist = -3)
    { 0x0050, -8 },  // (First char = [0x0050, P], Second char = [0x00C4, ], Kerning dist = -8)
    { 0x0054, -6 },  // (First char = [0x0054, T], Second char = [0x00C4, ], Kerning dist = -6)
    { 0x0055, -3 },  // (First char = [0x0055, U], Second char = [0x00C4, ], Kerning dist = -3)
    { 0x0056, -5 },  // (First char = [0x0056, V], Second char = [0x00C4, ], Kerning dist = -5)
    { 0x0059, -8 },  // (First char = [0x0059, Y], Second char = [0x00C4, ], Kerning dist = -8)
    { 0x0042, -2 },  // (First char = [0x0042, B], Second char = [0x00C5, ], Kerning dist = -2)
    { 0x0044, -4 },  // (First char = [0x0044, D], Second char = [0x00C5, ], Kerning dist = -4)
    { 0x0046, -8 },  // (First char = [0x0046, F], Second char = [0x00C5, ], Kerning dist = -8)
    { 0x004A, -2 },  // (First char = [0x004A, J], Second char = [0x00C5, ], Kerning dist = -2)
    { 0x004E, -1 },  // (First char = [0x004E, N], Second char = [0x00C5, ], Kerning dist = -1)
    { 0x004F, -3 },  // (First char = [0x004F, O], Second char = [0x00C5, ], Kerning dist = -3)
    { 0x0050, -8 },  // (First char = [0x0050, P], Second char = [0x00C5, ], Kerning dist = -8)
    { 0x0054, -6 },  // (First char = [0x0054, T], Second char = [0x00C5, ], Kerning dist = -6)
    { 0x0055, -3 },  // (First char = [0x0055, U], Second char = [0x00C5, ], Kerning dist = -3)
    { 0x0056, -5 },  // (First char = [0x0056, V], Second char = [0x00C5, ], Kerning dist = -5)
    { 0x0059, -8 },  // (First char = [0x0059, Y], Second char = [0x00C5, ], Kerning dist = -8)
    { 0x004B, -3 },  // (First char = [0x004B, K], Second char = [0x00D6, ], Kerning dist = -3)
    { 0x004C, -2 },  // (First char = [0x004C, L], Second char = [0x00D6, ], Kerning dist = -2)
    { 0x0052, -2 },  // (First char = [0x0052, R], Second char = [0x00D6, ], Kerning dist = -2)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x00D6, ], Kerning dist = -3)
    { 0x0056, -3 },  // (First char = [0x0056, V], Second char = [0x00D6, ], Kerning dist = -3)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x00D6, ], Kerning dist = -2)
    { 0x0058, -3 },  // (First char = [0x0058, X], Second char = [0x00D6, ], Kerning dist = -3)
    { 0x0059, -5 },  // (First char = [0x0059, Y], Second char = [0x00D6, ], Kerning dist = -5)
    { 0x0042, -2 },  // (First char = [0x0042, B], Second char = [0x00DC, ], Kerning dist = -2)
    { 0x004C, -2 },  // (First char = [0x004C, L], Second char = [0x00DC, ], Kerning dist = -2)
    { 0x0052, -2 },  // (First char = [0x0052, R], Second char = [0x00DC, ], Kerning dist = -2)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x00E4, ], Kerning dist = -2)
    { 0x004A, -2 },  // (First char = [0x004A, J], Second char = [0x00E4, ], Kerning dist = -2)
    { 0x0072,  2 },  // (First char = [0x0072, r], Second char = [0x00E4, ], Kerning dist = 2)
    { 0x0077, -1 },  // (First char = [0x0077, w], Second char = [0x00E4, ], Kerning dist = -1)
    { 0x0079, -2 },  // (First char = [0x0079, y], Second char = [0x00E4, ], Kerning dist = -2)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x00E5, ], Kerning dist = -2)
    { 0x004A, -2 },  // (First char = [0x004A, J], Second char = [0x00E5, ], Kerning dist = -2)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x00E5, ], Kerning dist = -2)
    { 0x0054, -5 },  // (First char = [0x0054, T], Second char = [0x00E5, ], Kerning dist = -5)
    { 0x0056, -4 },  // (First char = [0x0056, V], Second char = [0x00E5, ], Kerning dist = -4)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x00E5, ], Kerning dist = -2)
    { 0x0059, -8 },  // (First char = [0x0059, Y], Second char = [0x00E5, ], Kerning dist = -8)
    { 0x0072,  2 },  // (First char = [0x0072, r], Second char = [0x00E5, ], Kerning dist = 2)
    { 0x0077, -1 },  // (First char = [0x0077, w], Second char = [0x00E5, ], Kerning dist = -1)
    { 0x0079, -2 },  // (First char = [0x0079, y], Second char = [0x00E5, ], Kerning dist = -2)
    { 0x0046, -3 },  // (First char = [0x0046, F], Second char = [0x00F6, ], Kerning dist = -3)
    { 0x004A, -2 },  // (First char = [0x004A, J], Second char = [0x00F6, ], Kerning dist = -2)
    { 0x004B, -3 },  // (First char = [0x004B, K], Second char = [0x00F6, ], Kerning dist = -3)
    { 0x0052, -2 },  // (First char = [0x0052, R], Second char = [0x00F6, ], Kerning dist = -2)
    { 0x006B, -3 },  // (First char = [0x006B, k], Second char = [0x00F6, ], Kerning dist = -3)
    { 0x0072,  1 },  // (First char = [0x0072, r], Second char = [0x00F6, ], Kerning dist = 1)
    { 0x0076, -2 },  // (First char = [0x0076, v], Second char = [0x00F6, ], Kerning dist = -2)
    { 0x0077, -2 },  // (First char = [0x0077, w], Second char = [0x00F6, ], Kerning dist = -2)
    { 0x0078, -2 },  // (First char = [0x0078, x], Second char = [0x00F6, ], Kerning dist = -2)
    { 0x0079, -2 },  // (First char = [0x0079, y], Second char = [0x00F6, ], Kerning dist = -2)
    { 0x007A, -1 },  // (First char = [0x007A, z], Second char = [0x00F6, ], Kerning dist = -1)
    { 0x004A, -2 },  // (First char = [0x004A, J], Second char = [0x00FC, ], Kerning dist = -2)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x00FC, ], Kerning dist = -2)
    { 0x0052, -2 },  // (First char = [0x0052, R], Second char = [0x00FC, ], Kerning dist = -2)
    { 0x0072,  3 },  // (First char = [0x0072, r], Second char = [0x00FC, ], Kerning dist = 3)
};
