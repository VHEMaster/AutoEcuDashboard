#include <touchgfx/Font.hpp>

FONT_KERNING_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::KerningNode kerning_swissek_50_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE = {
    { 0x0046, -8 },  // (First char = [0x0046, F], Second char = [0x002C, comma], Kerning dist = -8)
    { 0x0048, -1 },  // (First char = [0x0048, H], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x004F, -2 },  // (First char = [0x004F, O], Second char = [0x002C, comma], Kerning dist = -2)
    { 0x0050, -11 },  // (First char = [0x0050, P], Second char = [0x002C, comma], Kerning dist = -11)
    { 0x0052,  1 },  // (First char = [0x0052, R], Second char = [0x002C, comma], Kerning dist = 1)
    { 0x0054, -6 },  // (First char = [0x0054, T], Second char = [0x002C, comma], Kerning dist = -6)
    { 0x0056, -8 },  // (First char = [0x0056, V], Second char = [0x002C, comma], Kerning dist = -8)
    { 0x0057, -4 },  // (First char = [0x0057, W], Second char = [0x002C, comma], Kerning dist = -4)
    { 0x0059, -7 },  // (First char = [0x0059, Y], Second char = [0x002C, comma], Kerning dist = -7)
    { 0x0066, -2 },  // (First char = [0x0066, f], Second char = [0x002C, comma], Kerning dist = -2)
    { 0x0072, -7 },  // (First char = [0x0072, r], Second char = [0x002C, comma], Kerning dist = -7)
    { 0x0076, -5 },  // (First char = [0x0076, v], Second char = [0x002C, comma], Kerning dist = -5)
    { 0x0077, -4 },  // (First char = [0x0077, w], Second char = [0x002C, comma], Kerning dist = -4)
    { 0x0079, -4 },  // (First char = [0x0079, y], Second char = [0x002C, comma], Kerning dist = -4)
    { 0x00D8, -2 },  // (First char = [0x00D8, Oslash], Second char = [0x002C, comma], Kerning dist = -2)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x002D, hyphen], Kerning dist = -1)
    { 0x0042,  1 },  // (First char = [0x0042, B], Second char = [0x002D, hyphen], Kerning dist = 1)
    { 0x0043,  1 },  // (First char = [0x0043, C], Second char = [0x002D, hyphen], Kerning dist = 1)
    { 0x0044,  2 },  // (First char = [0x0044, D], Second char = [0x002D, hyphen], Kerning dist = 2)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x002D, hyphen], Kerning dist = -2)
    { 0x0047,  1 },  // (First char = [0x0047, G], Second char = [0x002D, hyphen], Kerning dist = 1)
    { 0x004A, -1 },  // (First char = [0x004A, J], Second char = [0x002D, hyphen], Kerning dist = -1)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x002D, hyphen], Kerning dist = -2)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x002D, hyphen], Kerning dist = -1)
    { 0x004F,  1 },  // (First char = [0x004F, O], Second char = [0x002D, hyphen], Kerning dist = 1)
    { 0x0050, -4 },  // (First char = [0x0050, P], Second char = [0x002D, hyphen], Kerning dist = -4)
    { 0x0052, -1 },  // (First char = [0x0052, R], Second char = [0x002D, hyphen], Kerning dist = -1)
    { 0x0054, -6 },  // (First char = [0x0054, T], Second char = [0x002D, hyphen], Kerning dist = -6)
    { 0x0056, -4 },  // (First char = [0x0056, V], Second char = [0x002D, hyphen], Kerning dist = -4)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x002D, hyphen], Kerning dist = -1)
    { 0x0058, -2 },  // (First char = [0x0058, X], Second char = [0x002D, hyphen], Kerning dist = -2)
    { 0x0059, -6 },  // (First char = [0x0059, Y], Second char = [0x002D, hyphen], Kerning dist = -6)
    { 0x005A, -1 },  // (First char = [0x005A, Z], Second char = [0x002D, hyphen], Kerning dist = -1)
    { 0x0066, -1 },  // (First char = [0x0066, f], Second char = [0x002D, hyphen], Kerning dist = -1)
    { 0x006F,  2 },  // (First char = [0x006F, o], Second char = [0x002D, hyphen], Kerning dist = 2)
    { 0x0072, -2 },  // (First char = [0x0072, r], Second char = [0x002D, hyphen], Kerning dist = -2)
    { 0x0077,  1 },  // (First char = [0x0077, w], Second char = [0x002D, hyphen], Kerning dist = 1)
    { 0x0079, -1 },  // (First char = [0x0079, y], Second char = [0x002D, hyphen], Kerning dist = -1)
    { 0x00C5, -1 },  // (First char = [0x00C5, Aring], Second char = [0x002D, hyphen], Kerning dist = -1)
    { 0x00C6,  1 },  // (First char = [0x00C6, AE], Second char = [0x002D, hyphen], Kerning dist = 1)
    { 0x00D0,  2 },  // (First char = [0x00D0, Eth], Second char = [0x002D, hyphen], Kerning dist = 2)
    { 0x00D8,  1 },  // (First char = [0x00D8, Oslash], Second char = [0x002D, hyphen], Kerning dist = 1)
    { 0x00DF,  2 },  // (First char = [0x00DF, germandbls], Second char = [0x002D, hyphen], Kerning dist = 2)
    { 0x00F8,  2 },  // (First char = [0x00F8, oslash], Second char = [0x002D, hyphen], Kerning dist = 2)
    { 0x0046, -8 },  // (First char = [0x0046, F], Second char = [0x002E, period], Kerning dist = -8)
    { 0x0048, -1 },  // (First char = [0x0048, H], Second char = [0x002E, period], Kerning dist = -1)
    { 0x004F, -2 },  // (First char = [0x004F, O], Second char = [0x002E, period], Kerning dist = -2)
    { 0x0050, -11 },  // (First char = [0x0050, P], Second char = [0x002E, period], Kerning dist = -11)
    { 0x0052,  1 },  // (First char = [0x0052, R], Second char = [0x002E, period], Kerning dist = 1)
    { 0x0054, -6 },  // (First char = [0x0054, T], Second char = [0x002E, period], Kerning dist = -6)
    { 0x0056, -8 },  // (First char = [0x0056, V], Second char = [0x002E, period], Kerning dist = -8)
    { 0x0057, -4 },  // (First char = [0x0057, W], Second char = [0x002E, period], Kerning dist = -4)
    { 0x0059, -7 },  // (First char = [0x0059, Y], Second char = [0x002E, period], Kerning dist = -7)
    { 0x0066, -2 },  // (First char = [0x0066, f], Second char = [0x002E, period], Kerning dist = -2)
    { 0x0072, -7 },  // (First char = [0x0072, r], Second char = [0x002E, period], Kerning dist = -7)
    { 0x0076, -5 },  // (First char = [0x0076, v], Second char = [0x002E, period], Kerning dist = -5)
    { 0x0077, -4 },  // (First char = [0x0077, w], Second char = [0x002E, period], Kerning dist = -4)
    { 0x0079, -4 },  // (First char = [0x0079, y], Second char = [0x002E, period], Kerning dist = -4)
    { 0x00D8, -2 },  // (First char = [0x00D8, Oslash], Second char = [0x002E, period], Kerning dist = -2)
    { 0x0041,  1 },  // (First char = [0x0041, A], Second char = [0x003A, colon], Kerning dist = 1)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x003A, colon], Kerning dist = -2)
    { 0x004F,  1 },  // (First char = [0x004F, O], Second char = [0x003A, colon], Kerning dist = 1)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x003A, colon], Kerning dist = -1)
    { 0x0052, -1 },  // (First char = [0x0052, R], Second char = [0x003A, colon], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x003A, colon], Kerning dist = -1)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x003A, colon], Kerning dist = -2)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x003A, colon], Kerning dist = -1)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x003A, colon], Kerning dist = -3)
    { 0x00C5,  1 },  // (First char = [0x00C5, Aring], Second char = [0x003A, colon], Kerning dist = 1)
    { 0x00D8,  1 },  // (First char = [0x00D8, Oslash], Second char = [0x003A, colon], Kerning dist = 1)
    { 0x0041,  1 },  // (First char = [0x0041, A], Second char = [0x003B, semicolon], Kerning dist = 1)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x003B, semicolon], Kerning dist = -2)
    { 0x004F,  1 },  // (First char = [0x004F, O], Second char = [0x003B, semicolon], Kerning dist = 1)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x003B, semicolon], Kerning dist = -1)
    { 0x0052, -1 },  // (First char = [0x0052, R], Second char = [0x003B, semicolon], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x003B, semicolon], Kerning dist = -1)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x003B, semicolon], Kerning dist = -2)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x003B, semicolon], Kerning dist = -1)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x003B, semicolon], Kerning dist = -3)
    { 0x00C5,  1 },  // (First char = [0x00C5, Aring], Second char = [0x003B, semicolon], Kerning dist = 1)
    { 0x00D8,  1 },  // (First char = [0x00D8, Oslash], Second char = [0x003B, semicolon], Kerning dist = 1)
    { 0x002D, -1 },  // (First char = [0x002D, hyphen], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0041,  3 },  // (First char = [0x0041, A], Second char = [0x0041, A], Kerning dist = 3)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x0041, A], Kerning dist = -2)
    { 0x004C,  3 },  // (First char = [0x004C, L], Second char = [0x0041, A], Kerning dist = 3)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x0041, A], Kerning dist = -3)
    { 0x0055, -1 },  // (First char = [0x0055, U], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x0041, A], Kerning dist = -2)
    { 0x00BB, -2 },  // (First char = [0x00BB, guillemotright], Second char = [0x0041, A], Kerning dist = -2)
    { 0x00D0, -1 },  // (First char = [0x00D0, Eth], Second char = [0x0041, A], Kerning dist = -1)
    { 0x00D8, -1 },  // (First char = [0x00D8, Oslash], Second char = [0x0041, A], Kerning dist = -1)
    { 0x002D,  1 },  // (First char = [0x002D, hyphen], Second char = [0x0043, C], Kerning dist = 1)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x0043, C], Kerning dist = -1)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x0043, C], Kerning dist = -2)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0043, C], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x0043, C], Kerning dist = -1)
    { 0x00C5, -1 },  // (First char = [0x00C5, Aring], Second char = [0x0043, C], Kerning dist = -1)
    { 0x002D,  2 },  // (First char = [0x002D, hyphen], Second char = [0x0047, G], Kerning dist = 2)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x0047, G], Kerning dist = -1)
    { 0x00C5, -1 },  // (First char = [0x00C5, Aring], Second char = [0x0047, G], Kerning dist = -1)
    { 0x002D,  3 },  // (First char = [0x002D, hyphen], Second char = [0x004A, J], Kerning dist = 3)
    { 0x0055, -1 },  // (First char = [0x0055, U], Second char = [0x004A, J], Kerning dist = -1)
    { 0x00AB,  1 },  // (First char = [0x00AB, guillemotleft], Second char = [0x004A, J], Kerning dist = 1)
    { 0x00BB,  2 },  // (First char = [0x00BB, guillemotright], Second char = [0x004A, J], Kerning dist = 2)
    { 0x002D,  2 },  // (First char = [0x002D, hyphen], Second char = [0x004F, O], Kerning dist = 2)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x004F, O], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x004F, O], Kerning dist = -1)
    { 0x0058, -2 },  // (First char = [0x0058, X], Second char = [0x004F, O], Kerning dist = -2)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x004F, O], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x0051, Q], Kerning dist = -1)
    { 0x00C5, -1 },  // (First char = [0x00C5, Aring], Second char = [0x0051, Q], Kerning dist = -1)
    { 0x002D, -2 },  // (First char = [0x002D, hyphen], Second char = [0x0054, T], Kerning dist = -2)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0054, T], Kerning dist = -2)
    { 0x0047, -1 },  // (First char = [0x0047, G], Second char = [0x0054, T], Kerning dist = -1)
    { 0x004C, -4 },  // (First char = [0x004C, L], Second char = [0x0054, T], Kerning dist = -4)
    { 0x00AB, -3 },  // (First char = [0x00AB, guillemotleft], Second char = [0x0054, T], Kerning dist = -3)
    { 0x00BB, -5 },  // (First char = [0x00BB, guillemotright], Second char = [0x0054, T], Kerning dist = -5)
    { 0x00C5, -2 },  // (First char = [0x00C5, Aring], Second char = [0x0054, T], Kerning dist = -2)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x0055, U], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0055, U], Kerning dist = -1)
    { 0x00C5, -1 },  // (First char = [0x00C5, Aring], Second char = [0x0055, U], Kerning dist = -1)
    { 0x002D, -3 },  // (First char = [0x002D, hyphen], Second char = [0x0056, V], Kerning dist = -3)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0056, V], Kerning dist = -2)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x0056, V], Kerning dist = -1)
    { 0x004C, -3 },  // (First char = [0x004C, L], Second char = [0x0056, V], Kerning dist = -3)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x0056, V], Kerning dist = -1)
    { 0x00AB, -3 },  // (First char = [0x00AB, guillemotleft], Second char = [0x0056, V], Kerning dist = -3)
    { 0x00BB, -5 },  // (First char = [0x00BB, guillemotright], Second char = [0x0056, V], Kerning dist = -5)
    { 0x00C5, -2 },  // (First char = [0x00C5, Aring], Second char = [0x0056, V], Kerning dist = -2)
    { 0x00D0, -1 },  // (First char = [0x00D0, Eth], Second char = [0x0056, V], Kerning dist = -1)
    { 0x00D8, -1 },  // (First char = [0x00D8, Oslash], Second char = [0x0056, V], Kerning dist = -1)
    { 0x002D, -1 },  // (First char = [0x002D, hyphen], Second char = [0x0057, W], Kerning dist = -1)
    { 0x0041,  1 },  // (First char = [0x0041, A], Second char = [0x0057, W], Kerning dist = 1)
    { 0x0044,  1 },  // (First char = [0x0044, D], Second char = [0x0057, W], Kerning dist = 1)
    { 0x004B,  2 },  // (First char = [0x004B, K], Second char = [0x0057, W], Kerning dist = 2)
    { 0x004C, -2 },  // (First char = [0x004C, L], Second char = [0x0057, W], Kerning dist = -2)
    { 0x0052,  3 },  // (First char = [0x0052, R], Second char = [0x0057, W], Kerning dist = 3)
    { 0x00BB, -2 },  // (First char = [0x00BB, guillemotright], Second char = [0x0057, W], Kerning dist = -2)
    { 0x00C5,  1 },  // (First char = [0x00C5, Aring], Second char = [0x0057, W], Kerning dist = 1)
    { 0x00D0,  1 },  // (First char = [0x00D0, Eth], Second char = [0x0057, W], Kerning dist = 1)
    { 0x002D, -2 },  // (First char = [0x002D, hyphen], Second char = [0x0058, X], Kerning dist = -2)
    { 0x004F, -2 },  // (First char = [0x004F, O], Second char = [0x0058, X], Kerning dist = -2)
    { 0x00BB, -3 },  // (First char = [0x00BB, guillemotright], Second char = [0x0058, X], Kerning dist = -3)
    { 0x00D8, -2 },  // (First char = [0x00D8, Oslash], Second char = [0x0058, X], Kerning dist = -2)
    { 0x002D, -4 },  // (First char = [0x002D, hyphen], Second char = [0x0059, Y], Kerning dist = -4)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0047, -1 },  // (First char = [0x0047, G], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x004C, -5 },  // (First char = [0x004C, L], Second char = [0x0059, Y], Kerning dist = -5)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x00AB, -4 },  // (First char = [0x00AB, guillemotleft], Second char = [0x0059, Y], Kerning dist = -4)
    { 0x00BB, -5 },  // (First char = [0x00BB, guillemotright], Second char = [0x0059, Y], Kerning dist = -5)
    { 0x00C5, -2 },  // (First char = [0x00C5, Aring], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x00D0, -1 },  // (First char = [0x00D0, Eth], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x00D8, -1 },  // (First char = [0x00D8, Oslash], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x0061, a], Kerning dist = -3)
    { 0x0056, -3 },  // (First char = [0x0056, V], Second char = [0x0061, a], Kerning dist = -3)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0059, -5 },  // (First char = [0x0059, Y], Second char = [0x0061, a], Kerning dist = -5)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x0063, c], Kerning dist = -3)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0052, -1 },  // (First char = [0x0052, R], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x0065, e], Kerning dist = -3)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x0065, e], Kerning dist = -2)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x0065, e], Kerning dist = -2)
    { 0x0059, -5 },  // (First char = [0x0059, Y], Second char = [0x0065, e], Kerning dist = -5)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0057,  1 },  // (First char = [0x0057, W], Second char = [0x0069, i], Kerning dist = 1)
    { 0x002D,  2 },  // (First char = [0x002D, hyphen], Second char = [0x006F, o], Kerning dist = 2)
    { 0x0041,  1 },  // (First char = [0x0041, A], Second char = [0x006F, o], Kerning dist = 1)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x006F, o], Kerning dist = -2)
    { 0x0052, -1 },  // (First char = [0x0052, R], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0054, -4 },  // (First char = [0x0054, T], Second char = [0x006F, o], Kerning dist = -4)
    { 0x0056, -3 },  // (First char = [0x0056, V], Second char = [0x006F, o], Kerning dist = -3)
    { 0x0057,  1 },  // (First char = [0x0057, W], Second char = [0x006F, o], Kerning dist = 1)
    { 0x0059, -5 },  // (First char = [0x0059, Y], Second char = [0x006F, o], Kerning dist = -5)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x006F, o], Kerning dist = -1)
    { 0x00C5,  1 },  // (First char = [0x00C5, Aring], Second char = [0x006F, o], Kerning dist = 1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x0072, r], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0073, s], Kerning dist = -2)
    { 0x0066,  2 },  // (First char = [0x0066, f], Second char = [0x0074, t], Kerning dist = 2)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x0075, u], Kerning dist = -2)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x0075, u], Kerning dist = -1)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x0075, u], Kerning dist = -3)
    { 0x002D,  1 },  // (First char = [0x002D, hyphen], Second char = [0x0077, w], Kerning dist = 1)
    { 0x0054, -4 },  // (First char = [0x0054, T], Second char = [0x0077, w], Kerning dist = -4)
    { 0x0066,  2 },  // (First char = [0x0066, f], Second char = [0x0077, w], Kerning dist = 2)
    { 0x0065, -1 },  // (First char = [0x0065, e], Second char = [0x0078, x], Kerning dist = -1)
    { 0x006F, -1 },  // (First char = [0x006F, o], Second char = [0x0078, x], Kerning dist = -1)
    { 0x00E6, -1 },  // (First char = [0x00E6, ae], Second char = [0x0078, x], Kerning dist = -1)
    { 0x00F8, -1 },  // (First char = [0x00F8, oslash], Second char = [0x0078, x], Kerning dist = -1)
    { 0x0041,  1 },  // (First char = [0x0041, A], Second char = [0x0079, y], Kerning dist = 1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0079, y], Kerning dist = -1)
    { 0x004C, -2 },  // (First char = [0x004C, L], Second char = [0x0079, y], Kerning dist = -2)
    { 0x0052,  2 },  // (First char = [0x0052, R], Second char = [0x0079, y], Kerning dist = 2)
    { 0x0054, -4 },  // (First char = [0x0054, T], Second char = [0x0079, y], Kerning dist = -4)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0079, y], Kerning dist = -1)
    { 0x0066,  2 },  // (First char = [0x0066, f], Second char = [0x0079, y], Kerning dist = 2)
    { 0x00C5,  1 },  // (First char = [0x00C5, Aring], Second char = [0x0079, y], Kerning dist = 1)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x00AB, guillemotleft], Kerning dist = -2)
    { 0x0046, -5 },  // (First char = [0x0046, F], Second char = [0x00AB, guillemotleft], Kerning dist = -5)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x00AB, guillemotleft], Kerning dist = -1)
    { 0x0050, -3 },  // (First char = [0x0050, P], Second char = [0x00AB, guillemotleft], Kerning dist = -3)
    { 0x0054, -5 },  // (First char = [0x0054, T], Second char = [0x00AB, guillemotleft], Kerning dist = -5)
    { 0x0056, -5 },  // (First char = [0x0056, V], Second char = [0x00AB, guillemotleft], Kerning dist = -5)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x00AB, guillemotleft], Kerning dist = -2)
    { 0x0058, -3 },  // (First char = [0x0058, X], Second char = [0x00AB, guillemotleft], Kerning dist = -3)
    { 0x0059, -5 },  // (First char = [0x0059, Y], Second char = [0x00AB, guillemotleft], Kerning dist = -5)
    { 0x0066, -1 },  // (First char = [0x0066, f], Second char = [0x00AB, guillemotleft], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, r], Second char = [0x00AB, guillemotleft], Kerning dist = -1)
    { 0x00C5, -2 },  // (First char = [0x00C5, Aring], Second char = [0x00AB, guillemotleft], Kerning dist = -2)
    { 0x0046, -3 },  // (First char = [0x0046, F], Second char = [0x00BB, guillemotright], Kerning dist = -3)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x00BB, guillemotright], Kerning dist = -2)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x00BB, guillemotright], Kerning dist = -3)
    { 0x0056, -3 },  // (First char = [0x0056, V], Second char = [0x00BB, guillemotright], Kerning dist = -3)
    { 0x0059, -4 },  // (First char = [0x0059, Y], Second char = [0x00BB, guillemotright], Kerning dist = -4)
    { 0x002D, -1 },  // (First char = [0x002D, hyphen], Second char = [0x00C5, Aring], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x00C5, Aring], Kerning dist = -1)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x00C5, Aring], Kerning dist = -2)
    { 0x004C,  3 },  // (First char = [0x004C, L], Second char = [0x00C5, Aring], Kerning dist = 3)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x00C5, Aring], Kerning dist = -1)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x00C5, Aring], Kerning dist = -2)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x00C5, Aring], Kerning dist = -3)
    { 0x0055, -1 },  // (First char = [0x0055, U], Second char = [0x00C5, Aring], Kerning dist = -1)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x00C5, Aring], Kerning dist = -2)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x00C5, Aring], Kerning dist = -2)
    { 0x00BB, -2 },  // (First char = [0x00BB, guillemotright], Second char = [0x00C5, Aring], Kerning dist = -2)
    { 0x00D0, -1 },  // (First char = [0x00D0, Eth], Second char = [0x00C5, Aring], Kerning dist = -1)
    { 0x00D8, -1 },  // (First char = [0x00D8, Oslash], Second char = [0x00C5, Aring], Kerning dist = -1)
    { 0x002D,  1 },  // (First char = [0x002D, hyphen], Second char = [0x00C6, AE], Kerning dist = 1)
    { 0x00AB,  4 },  // (First char = [0x00AB, guillemotleft], Second char = [0x00C6, AE], Kerning dist = 4)
    { 0x002D,  2 },  // (First char = [0x002D, hyphen], Second char = [0x00D8, Oslash], Kerning dist = 2)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x00D8, Oslash], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x00D8, Oslash], Kerning dist = -1)
    { 0x0058, -2 },  // (First char = [0x0058, X], Second char = [0x00D8, Oslash], Kerning dist = -2)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x00D8, Oslash], Kerning dist = -1)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x00E6, ae], Kerning dist = -2)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x00E6, ae], Kerning dist = -1)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x00E6, ae], Kerning dist = -3)
    { 0x0056, -3 },  // (First char = [0x0056, V], Second char = [0x00E6, ae], Kerning dist = -3)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x00E6, ae], Kerning dist = -2)
    { 0x0059, -5 },  // (First char = [0x0059, Y], Second char = [0x00E6, ae], Kerning dist = -5)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x00E6, ae], Kerning dist = -1)
    { 0x002D,  2 },  // (First char = [0x002D, hyphen], Second char = [0x00F8, oslash], Kerning dist = 2)
    { 0x0041,  1 },  // (First char = [0x0041, A], Second char = [0x00F8, oslash], Kerning dist = 1)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x00F8, oslash], Kerning dist = -2)
    { 0x0052, -1 },  // (First char = [0x0052, R], Second char = [0x00F8, oslash], Kerning dist = -1)
    { 0x0054, -4 },  // (First char = [0x0054, T], Second char = [0x00F8, oslash], Kerning dist = -4)
    { 0x0056, -3 },  // (First char = [0x0056, V], Second char = [0x00F8, oslash], Kerning dist = -3)
    { 0x0057,  1 },  // (First char = [0x0057, W], Second char = [0x00F8, oslash], Kerning dist = 1)
    { 0x0059, -5 },  // (First char = [0x0059, Y], Second char = [0x00F8, oslash], Kerning dist = -5)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x00F8, oslash], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x00F8, oslash], Kerning dist = -1)
    { 0x00C5,  1 },  // (First char = [0x00C5, Aring], Second char = [0x00F8, oslash], Kerning dist = 1)
};
