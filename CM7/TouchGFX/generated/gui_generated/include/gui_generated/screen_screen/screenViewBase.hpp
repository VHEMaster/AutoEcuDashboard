/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREENVIEWBASE_HPP
#define SCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen_screen/screenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/Gauge.hpp>

class screenViewBase : public touchgfx::View<screenPresenter>
{
public:
    screenViewBase();
    virtual ~screenViewBase();
    virtual void setupScreen();
    virtual void handleTickEvent();

    /*
     * Virtual Action Handlers
     */
    virtual void functionGaugeUpdate()
    {
        // Override and implement this function in screen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image imageShiftUp;
    touchgfx::Image imageTraction;
    touchgfx::Image imageABS;
    touchgfx::Image imageHandBrake;
    touchgfx::Image imageBrake;
    touchgfx::Image imageHeadlight;
    touchgfx::Image imageLowBeam;
    touchgfx::Image imageFuel;
    touchgfx::Image imageHighBeam;
    touchgfx::Image imageTurnRight;
    touchgfx::Image imageTurnLeft;
    touchgfx::Image imageOilPressure;
    touchgfx::Image imageBatteryCharge;
    touchgfx::Image imageCheckEngine;
    touchgfx::Image imageOilTemp;
    touchgfx::Image imageCoolantTemp;
    touchgfx::TextAreaWithOneWildcard textFPS;
    touchgfx::Gauge gaugeManifoldPressure;
    touchgfx::Gauge gaugeSpeedMeter;
    touchgfx::Gauge gaugeFuelLevel;
    touchgfx::Gauge gaugeCoolantTemp;
    touchgfx::Gauge gaugeOilTemp;
    touchgfx::Gauge gaugeOilPress;
    touchgfx::Gauge gaugeTachometer;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTFPS_SIZE = 32;
    touchgfx::Unicode::UnicodeChar textFPSBuffer[TEXTFPS_SIZE];

private:

};

#endif // SCREENVIEWBASE_HPP
